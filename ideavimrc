set nonumber
set ideajoin
set ideamarks
set clipboard=unnamedplus
set idearefactormode=keep

map <C-n> <Action>(EditorDown)
map <C-p> <Action>(EditorUp)

xnoremap p "_s<c-r>+<esc>
xnoremap P "_s<c-r>+<esc>

inoremap <C-\> <C-O>:action ParameterInfo<CR>
map gd <Action>(GotoDeclaration)
map gi <Action>(GotoImplementation)
map gt <Action>(GotoTypeDeclaration)
map gu <Action>(GotoSuperMethod)

map <C-O> <Action>(Back)
map <C-I> <Action>(Forward)

map <C-l> <C-W>l
map <C-h> <C-W>h
map <C-j> <C-W>j
map <C-k> <C-W>k

map K <Action>(ShowHoverInfo)

let mapleader = "\<space>"

map <space>: <Action>(GotoAction)
map <space>; <Action>(GotoAction)
map <space>pf <Action>(GotoFile)
map <space>pr <Action>(RecentFiles)
map <space>pp <Action>(ManageRecentProjects)

map <space>sv <Action>(SplitVertically)
map <space>sh <Action>(SplitHorizontally)

map <space>wh <Action>(HideAllWindows)
map <space>wc <Action>(CloseContent)

map <space>ri <Action>(OptimizeImports)
map <space>rr <Action>(Refactorings.QuickListPopupAction)
map <space>rs <Action>(SurroundWith)

map <space>tn <Action>(GotoTest)
map <space>tr <Action>(RunClass)
map <space>tt <Action>(Rerun)
map <space>tf <Action>(RerunFailedTests)

map <space>n :noh<CR>
map <space>jw <Action>(KJumpAction.Word1)
map <space>jf <Action>(KJumpAction)
