YELLOW="%b%F{yellow}"
WHITE="%b%F{white}"
BGREEN="%B%F{green}"
BCYAN="%B%F{cyan}"
BRED="%B%F{red}"
RESET="%b%f"

function prompt_clock() {
    echo "${WHITE}$(date +'%R')"
}

function prompt_pwd() {
    wd="${PWD/$HOME/~}"
    IFS='/' arr=($(echo -n "$wd"))
    last="${arr[-1]}"
    unset "arr[-1]"
    echo -n " ${YELLOW}"
    for el in ${arr[@]}; do
        echo -n "${el:0:1}/"
    done
    echo "${last}"
}

function prompt_git() {
    ref=$(git symbolic-ref HEAD 2> /dev/null || git rev-parse --short HEAD 2> /dev/null) || return 0
    dirty=$([[ -n "$(git status --porcelain | tail -n1)" ]] && echo " X")
    echo " ${BCYAN}git:(${BRED}${ref#refs/heads/}${YELLOW}${dirty}${BCYAN})"
}

function prompt_aws() {
    profile=$(export | grep AWS_PROFILE) || return 0
    echo " ${BCYAN}aws:(${BRED}${AWS_PROFILE}${BCYAN})"
}

function prompt_kube() {
    ctx=$(kubectl config current-context 2> /dev/null) || return 0
    ns=$(kubectl config view --minify --output 'jsonpath={..namespace}' 2> /dev/null)
    echo " ${BCYAN}k8s:(${BRED}${ctx##*:cluster/}${WHITE}:${BGREEN}${ns:-default}${BCYAN})"
}

function prompt_prompt() {
    echo "%(?.${BGREEN}.${BRED})> "
}

function build_prompt() {
    max=$(tput cols)
    prompt_pre="$(prompt_clock)$(prompt_pwd)$(prompt_git)$(prompt_aws)$(prompt_kube)"
    prompt_pre_text=$(print -P "${prompt_pre}") # only text
    if [ ${#prompt_pre_text} -ge ${max} ]; then
        prompt_pre="$(prompt_clock)$(prompt_pwd)"
        prompt_pre_second="$(prompt_git)$(prompt_aws)$(prompt_kube)"
        prompt_pre="${prompt_pre}\n${prompt_pre_second:1}" # remove initial space from second line
    fi
    echo "${prompt_pre}\n$(prompt_prompt)${RESET}"
}

PROMPT='
$(build_prompt)'
